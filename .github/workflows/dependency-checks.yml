name: DevSecOps Pipeline

on:
  pull_request:
    branches:
      - "**"
    paths:
      - .github/workflows/semgrep.yml
  schedule:
    - cron: "20 17 * * *" # Scan every day at 17:20 UTC.
  workflow_dispatch:

permissions:
  contents: read

jobs:
  dependency-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Bandit Security Scan
        run: bandit -r ./ --severity-level high --confidence-level all

      - name: Run Pip Audit
        run: pip-audit

      - name: Run Safety Security Check
        run: safety check -r requirements.txt

      - name: OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "queuetopia-account"
          path: "."
          format: "HTML"
          out: "reports"

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/

  static-code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pylint semgrep

      - name: Run Python Code Quality Checks
        run: pylint --disable=all --enable=security-issue,import-error,typecheck *.py || true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  semgrep:
    # User definable name of this GitHub Actions job.
    name: semgrep-oss/scan
    # If you are self-hosting, change the following `runs-on` value:
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout. Use either v3 or v4.
      - uses: actions/checkout@v4
      # Run the "semgrep scan" command on the command line of the docker image.
      - run: semgrep scan --config auto

  infrastructure-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Scan Dockerfile
        uses: hadolint/hadolint-action@v3.1.0

  container-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: account-mgr:latest
          load: true

      - name: Docker image scan
        uses: anchore/scan-action@v3
        with:
          image: "account-mgr:latest"
          fail-build: true
          severity-cutoff: "high"

  license-compliance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pip-licenses

      - name: Check for license compliance
        run: pip-licenses --format=json --with-license-file --with-urls > license-report.json

      - name: Upload License Report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: license-report.json

  security-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run security unit tests
        run: pytest tests/ --cov=. --cov-report=xml -m security || true

  sbom-generation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json
